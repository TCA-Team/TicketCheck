plugins {
    id 'io.gitlab.arturbosch.detekt' version "1.0.0.RC6-4"
    id 'de.aaschmid.cpd' version '1.0'
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: '../gradle/scripts/findbugs.gradle'
apply from: '../gradle/scripts/pmd.gradle'
apply from: '../gradle/scripts/jacoco.gradle'
apply from: '../gradle/scripts/checkstyle.gradle'
apply from: '../gradle/scripts/detekt.gradle'
apply from: '../gradle/scripts/testLogging.gradle'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    buildTypes {
        all {
            proguardFiles(file('../proguard').listFiles())
            proguardFile getDefaultProguardFile('proguard-android.txt')
            minifyEnabled true
            useProguard true
            shrinkResources true
        }
        release.debuggable false
        debug {
            debuggable true
            testCoverageEnabled true
        }
    }
    defaultConfig {
        applicationId "de.tum.in.tca.ticketcheck"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        kapt.arguments {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }
    }
    lintOptions {
        checkAllWarnings true
        htmlReport false
        abortOnError false
        lintConfig new File("gradle/config/lint.xml")
        disable 'GoogleAppIndexingWarning',
                'TrulyRandom',
                'ContentDescription',
                'UnusedIds',
                'UnusedResources',    // unused resources get purged by shrinkResources
                'SelectableText'      // disabled by default
    }
    packagingOptions {
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def androidSupportVersion = '27.1.1'
def retrofitVersion = '2.3.0'
def roomVersion = '1.1.1'
def ankoVersion = '0.10.5'

configurations.all {
    resolutionStrategy {
        force "com.android.support:exifinterface:$androidSupportVersion"
        force 'com.google.code.findbugs:jsr305:3.0.2'
    }
}

dependencies {

    // Support libraries
    implementation "com.android.support:design:$androidSupportVersion"
    implementation "com.android.support:preference-v7:$androidSupportVersion"
    implementation "com.android.support:preference-v14:$androidSupportVersion"
    implementation "com.android.support:support-v4:$androidSupportVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'

    // Android architecture components
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    implementation 'android.arch.lifecycle:runtime:1.1.1'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    kapt "android.arch.lifecycle:compiler:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.anko:anko:$ankoVersion"

    // Helpers
    implementation 'net.danlew:android.joda:2.9.9.4'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'

    // Transport
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // QR code scanning
    implementation 'me.dm7.barcodescanner:zxing:1.9.8'
}
